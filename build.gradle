plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.13'
    id 'io.spring.dependency-management' version '1.1.0'
}

group 'org.example'
version = '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
}

compileJava.options.encoding = 'UTF-8'
tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

dependencies {

    // Spring
    implementation 'org.springframework:spring-core:5.3.23'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-cache:2.7.5'
    implementation 'org.springframework:spring-aop:5.3.23'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.26'
    annotationProcessor 'org.projectlombok:lombok:1.18.26'

    // Database
    implementation 'org.postgresql:postgresql:42.6.0'

    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test:3.1.2'

    // Log4j
    implementation 'org.apache.logging.log4j:log4j-api:2.20.0'
    implementation 'org.apache.logging.log4j:log4j-core:2.20.0'

    // Liquibase
    implementation 'org.liquibase:liquibase-core:4.23.0'

    // Swagger
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.15'

    //MapStruct
    implementation 'org.mapstruct:mapstruct:1.4.2.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'

}

test {
    useJUnitPlatform()
}